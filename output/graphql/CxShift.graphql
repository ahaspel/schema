type CxShift {
  Name: String
  Days: [IxShiftDay]
  Default: Boolean
  UseHolidays: Boolean
  ObjectType: CxShiftObjectType
  Children: [IxActionHolder]
  Description: String
  Id: ID!
  Start: String
  End: String
  Lifespan: IxRange
  CurrentLifespan: IxRange
  History: [IxRange]
  Tags: [IxAttribute__String__]
}

input CxShiftInput {
  Name: String!
  Days: [IxShiftDayInput]!
  Default: Boolean
  UseHolidays: Boolean
  ObjectType: CxShiftObjectType
  Children: [IxActionHolderDO]
  Description: String
  Id: ID!
  Start: String
  End: String
  Lifespan: IxRangeInput
  CurrentLifespan: IxRangeInput
  History: [IxRangeInput]
  Tags: [IxAttribute__String__DO]
}

enum CxShiftObjectType {
  Shift
}

input FilterInput {
  name: String!
  values: [String]
}

type IxActionHolder {
  Start: String
  End: String
  Lifespan: IxRange
  CurrentLifespan: IxRange
  History: [IxRange]
  Duration: String
  Id: ID!
  ObjectType: String
  Name: String
  Description: String
  Tags: [IxAttribute__String__]
}

input IxActionHolderDO {
  Id: ID!
}

type IxAttribute__String__ {
  Id: ID!
  ObjectType: IxAttributeStringObjectType
  Name: String
  Description: String
}

input IxAttribute__String__DO {
  Id: ID!
}

enum IxAttributeStringObjectType {
  Attribute
}

type IxRange {
  Start: String
  End: String
  Duration: String
}

input IxRangeInput {
  Start: String!
  End: String!
  Duration: String
}

type IxShiftDay {
  Day: Int
  DayByName: String
  Start: String
  End: String
}

input IxShiftDayInput {
  Day: Int!
  DayByName: String
  Start: String!
  End: String!
}

extend type Mutation {
  cxShifts_onSave(data: [CxShiftInput], objectType: String, operation: String = "edit"): [CxShift]
}

extend type Query {
  cxShifts(filters: [FilterInput]): [CxShift]
}
