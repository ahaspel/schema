type CxDependency {
  ObjectType: String
  Ids: [Int]
}

type CxResourceQuantitySpan {
  ResourceSubtype: IxResourceSubtype
  ResourceSubtypeId: ID
  Supplier: IxCompany
  SupplierId: ID
  Quantity: IxQuantity
  Range: IxRange
  ResourceIds: [Int]
}

input CxResourceQuantitySpanInput {
  ResourceSubtypeId: ID!
  SupplierId: ID!
  Quantity: IxQuantityInput
  Range: IxRangeInput!
  ResourceIds: [Int]
}

input FilterInput {
  name: String!
  values: [String]
  child: String
  invert: Boolean = false
}

type IxAddress {
  Street: String
  StreetDetails: String
  ZipCode: String
  City: String
  State: IxLookupValue
  Geocode: IxGeocode
  Id: ID!
  ObjectType: IxAddressObjectType
}

enum IxAddressObjectType {
  Address
}

type IxAttribute__String__ {
  BaseObject: String
  AttributeId: ID
  Dependencies: [CxDependency]
  Id: ID!
  ObjectType: IxAttributeStringObjectType
  Description: String
  Name: String
}

enum IxAttributeStringObjectType {
  Attribute
}

type IxCompany {
  CompanyType: IxLookupValue
  Supplier: Boolean
  Emails: [IxEmail]
  PhoneNumbers: [IxPhoneNumber]
  HasSMSNumber: Boolean
  SMSNumber: IxPhoneNumber
  Id: ID!
  ObjectType: IxCompanyObjectType
  Description: String
  Name: String
  Dependencies: [CxDependency]
  CurrentLifespan: IxRange
  Start: String
  End: String
  Tags: [IxAttribute__String__]
  Address: IxAddress
  AccountCode: String
  Divisions: [IxLookupValue]
  Contacts: [IxParty]
}

enum IxCompanyObjectType {
  Company
  Subcontractor
  Plant
}

type IxEmail {
  Email: String
  Id: ID
  Description: String
  Name: String
}

type IxGeocode {
  Lat: Float
  Lng: Float
  Source: IxGeocodeSource
}

enum IxGeocodeSource {
  Action
  Owner
  GPSService
}

type IxLookupValue {
  BaseObject: String
  Id: ID!
  ObjectType: IxLookupValueObjectType
  Description: String
  Name: String
  Dependencies: [CxDependency]
}

enum IxLookupValueObjectType {
  JobPriority
  JobSubtype
  JobType
  Division
  LaborClass
  Language
  License
  Minority
  Skill
  Training
  Union
  State
  Attribute
  PurchaseOrderStatus
  TimeEntryType
  CompanyType
  JobStatus
  DocumentType
  TimeEntryLaborClass
  Privilege
  JobCertification
}

type IxParty {
  Emails: [IxEmail]
  PhoneNumbers: [IxPhoneNumber]
  HasSMSNumber: Boolean
  SMSNumber: IxPhoneNumber
  Id: ID!
  ObjectType: IxPartyObjectType
  Description: String
  Name: String
  Dependencies: [CxDependency]
  CurrentLifespan: IxRange
  Start: String
  End: String
  Tags: [IxAttribute__String__]
  Address: IxAddress
}

enum IxPartyObjectType {
  Party
  Company
  Subcontractor
  Plant
}

type IxPhoneNumber {
  PhoneNumber: String
  Id: ID
  Description: String
  Name: String
}

type IxQuantity {
  Unit: IxUnit
  Quantity: Float
}

input IxQuantityInput {
  Unit: IxUnitDO!
  Quantity: Float!
}

type IxRange {
  Start: String
  End: String
  Duration: String
}

input IxRangeInput {
  Start: String!
  End: String!
  Duration: String
}

type IxResourceSubtype {
  ParentId: ID
  Dependencies: [CxDependency]
  Id: ID!
  ObjectType: IxResourceSubtypeObjectType
  Description: String
  Name: String
}

enum IxResourceSubtypeObjectType {
  ResourceSubtype
}

type IxUnit {
  UnitType: IxUnitUnitType
  Scalar: Float
  Integral: Boolean
  BaseObject: String
  Id: ID!
  ObjectType: IxUnitObjectType
  Description: String
  Name: String
}

input IxUnitDO {
  Id: ID!
}

enum IxUnitObjectType {
  Unit
}

enum IxUnitUnitType {
  Time
  Length
  Weight
  Area
  Volume
  Money
  Self
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

input methodInput {
  name: String!
  args: JSONObject
}

input methodsByItemInput {
  indices: [Int]
  methods: [methodInput]
  noEdit: String
}

extend type Mutation {
  cxResourceQuantitySpans_onSave(data: [CxResourceQuantitySpanInput], filters: [FilterInput], objectType: String, operation: String = "edit", properties: [String], methodsByItem: [methodsByItemInput]): [CxResourceQuantitySpan]
  cxResourceQuantitySpans_onDelete(data: [String], objectType: String, operation: String = "delete"): [CxResourceQuantitySpan]
}

extend type Query {
  cxResourceQuantitySpans(filters: [FilterInput], objectType: String): [CxResourceQuantitySpan]
}
