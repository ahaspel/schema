type CxUnitCost {
  Cost: IxMoney
  Unit: IxUnit
  Notes: String
}

input CxUnitCostInput {
  Cost: IxMoneyInput!
  Unit: IxUnitInput!
  Notes: String
}

input FilterInput {
  name: String!
  values: [String]
}

type IxMoney {
  Unit: IxUnit
  Quantity: Float
}

input IxMoneyInput {
  Unit: IxUnitInput!
  Quantity: Float!
}

type IxUnit {
  UnitType: IxUnitUnitType
  Scalar: Float
  Integral: Boolean
  Id: ID!
  ObjectType: IxUnitObjectType
  Name: String
  Description: String
}

input IxUnitInput {
  UnitType: IxUnitUnitType
  Scalar: Float
  Integral: Boolean
  Id: ID!
  ObjectType: IxUnitObjectType
  Name: String
  Description: String
}

enum IxUnitObjectType {
  Unit
}

enum IxUnitUnitType {
  Time
  Length
  Weight
  Area
  Volume
  Money
  Self
}

extend type Mutation {
  cxUnitCosts_onSave(data: [CxUnitCostInput], objectType: String, operation: String = "edit"): [CxUnitCost]
}

extend type Query {
  cxUnitCosts(filters: [FilterInput], objectType: String): [CxUnitCost]
}
