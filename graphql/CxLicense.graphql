type CxLicense {
  Expiration: String
  AllowedUsers: Int
  AllowedWebUsers: Int
  SerialNumber: String
  Valid: Boolean
  MachineId: String
  Nag: Boolean
  ErrorMessage: String
  ObjectType: String
  Children: [IxActionHolder]
  Description: String
  Name: String
  Id: ID!
  Start: String
  End: String
  Lifespan: IxRange
  CurrentLifespan: IxRange
  History: [IxRange]
  Duration: String
  Tags: [IxAttribute__String__]
}

input CxLicenseInput {
  Expiration: String!
  AllowedUsers: Int!
  AllowedWebUsers: Int!
  SerialNumber: String!
  Valid: Boolean
  MachineId: String
  Nag: Boolean
  ErrorMessage: String
  ObjectType: String
  Children: [IxActionHolderDO]
  Description: String
  Name: String!
  Id: ID!
  Start: String
  End: String
  Lifespan: IxRangeInput
  CurrentLifespan: IxRangeInput
  History: [IxRangeInput]
  Duration: String
  Tags: [IxAttribute__String__DO]
}

input FilterInput {
  name: String!
  values: [String]
}

type IxActionHolder {
  Start: String
  End: String
  Lifespan: IxRange
  CurrentLifespan: IxRange
  History: [IxRange]
  Duration: String
  Id: ID!
  ObjectType: String
  Name: String
  Description: String
  Tags: [IxAttribute__String__]
}

input IxActionHolderDO {
  Id: ID!
}

type IxAttribute__String__ {
  Id: ID!
  ObjectType: IxAttributeStringObjectType
  Name: String
  Description: String
}

input IxAttribute__String__DO {
  Id: ID!
}

enum IxAttributeStringObjectType {
  Attribute
}

type IxRange {
  Start: String
  End: String
  Duration: String
}

input IxRangeInput {
  Start: String!
  End: String!
  Duration: String
}

extend type Mutation {
  cxLicenses_onSave(data: [CxLicenseInput], objectType: String, operation: String = "edit"): [CxLicense]
}

extend type Query {
  cxLicenses(filters: [FilterInput], objectType: String): [CxLicense]
}
