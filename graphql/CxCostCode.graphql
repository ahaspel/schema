type CxCostCode {
  UnitCost: IxUnitCost
  Global: Boolean
  ObjectType: CxCostCodeObjectType
  Name: String
  Id: ID!
  Description: String
}

input CxCostCodeInput {
  UnitCost: IxUnitCostInput!
  Global: Boolean
  Name: String!
  Id: ID!
  Description: String
}

enum CxCostCodeObjectType {
  CostCode
}

input FilterInput {
  name: String!
  values: [String]
}

type IxMoney {
  Unit: IxUnit
  Quantity: Float
}

input IxMoneyInput {
  Unit: IxUnitDO!
  Quantity: Float!
}

type IxUnit {
  UnitType: IxUnitUnitType
  Scalar: Float
  Integral: Boolean
  BaseObject: String
  Id: ID!
  ObjectType: IxUnitObjectType
  Name: String
  Description: String
}

type IxUnitCost {
  Unit: IxUnit
  Cost: IxMoney
  Notes: String
}

input IxUnitCostInput {
  Unit: IxUnitDO!
  Cost: IxMoneyInput!
  Notes: String
}

input IxUnitDO {
  Id: ID!
}

enum IxUnitObjectType {
  Unit
}

enum IxUnitUnitType {
  Time
  Length
  Weight
  Area
  Volume
  Money
  Self
}

extend type Mutation {
  cxCostCodes_onSave(data: [CxCostCodeInput], objectType: String = "CostCode", operation: String = "edit"): [CxCostCode]
  cxCostCodes_onDelete(data: [String], objectType: String = "CostCode", operation: String = "delete"): [CxCostCode]
}

extend type Query {
  cxCostCodes(filters: [FilterInput], objectType: String = "CostCode"): [CxCostCode]
}
