type CxParty {
  PhoneNumbers: [IxPhoneNumber]
  Emails: [IxEmail]
  Name: String
  Description: String
  Title: IxTypedItem__String__
  Address: IxAddress
  ObjectType: CxPartyObjectType
  Id: ID!
  Tags: [IxAttribute__String__]
}

input CxPartyInput {
  PhoneNumbers: [IxPhoneNumberDO]
  Emails: [IxEmailDO]
  Name: String!
  Description: String
  Title: IxTypedItem__String__DO
  Address: IxAddressDO
  ObjectType: CxPartyObjectType
  Id: ID!
  Tags: [IxAttribute__String__DO]
}

enum CxPartyObjectType {
  Party
}

input FilterInput {
  name: String!
  values: [String]
}

type IxAddress {
  Street: String
  StreetDetails: String
  State: IxLookupValue
  City: String
  ZipCode: String
  Geocode: IxGeocode
  Id: ID!
  ObjectType: IxAddressObjectType
  Name: String
  Description: String
}

input IxAddressDO {
  Id: ID!
}

enum IxAddressObjectType {
  Address
}

type IxAttribute__String__ {
  Id: ID!
  ObjectType: IxAttributeStringObjectType
  Name: String
  Description: String
}

input IxAttribute__String__DO {
  Id: ID!
}

enum IxAttributeStringObjectType {
  Attribute
}

type IxEmail {
  Id: ID!
  Email: String
  Name: String
  Description: String
}

input IxEmailDO {
  Id: ID!
}

type IxGeocode {
  Lat: Float
  Lng: Float
  Source: IxGeocodeSource
}

enum IxGeocodeSource {
  Action
  Owner
  GPSService
}

type IxLookupValue {
  Id: ID!
  ObjectType: IxLookupValueObjectType
  Name: String
  Description: String
  Tags: [IxAttribute__String__]
}

enum IxLookupValueObjectType {
  JobPriority
  JobSubtype
  JobType
  Division
  LaborClass
  Language
  License
  Minority
  Skill
  Training
  Union
  State
  Attribute
  PurchaseOrderStatus
  Privilege
  BatchStatus
  TimeEntryType
  CompanyType
  JobStatus
  JobCertification
  WebPrivilege
}

type IxPhoneNumber {
  Id: ID!
  PhoneNumber: String
  Valid: Boolean
  New: Boolean
  Name: String
  Description: String
}

input IxPhoneNumberDO {
  Id: ID!
}

type IxTypedItem__String__ {
  Id: ID!
  ObjectType: String
  Name: String
  Description: String
}

input IxTypedItem__String__DO {
  Id: ID!
}

extend type Mutation {
  cxPartys_onSave(data: [CxPartyInput], objectType: String = "Party", operation: String = "edit"): [CxParty]
}

extend type Query {
  cxPartys(filters: [FilterInput], objectType: String = "Party"): [CxParty]
}
