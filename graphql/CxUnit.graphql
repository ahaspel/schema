type CxUnit {
  ObjectType: CxUnitObjectType
  BaseObject: String
  Scalar: Float
  UnitType: CxUnitUnitType
  Integral: Boolean
  Id: ID!
  Name: String
  Description: String
}

input CxUnitDO {
  Id: ID!
}

enum CxUnitObjectType {
  Unit
}

enum CxUnitUnitType {
  Time
  Length
  Weight
  Area
  Volume
  Money
  Self
}

input FilterInput {
  name: String!
  values: [String]
  child: String
  invert: Boolean = false
}

extend type Mutation {
  cxUnits_onSave(data: [CxUnitDO], objectType: String = "Unit", operation: String = "edit", properties: [String], postProcess: [PostProcess]): [CxUnit]
  cxUnits_onDelete(data: [String], objectType: String = "Unit", operation: String = "delete"): [CxUnit]
}

input PostProcess {
  name: String!
  values: [String]
}

extend type Query {
  cxUnits(filters: [FilterInput], objectType: String = "Unit"): [CxUnit]
}
