type CxDependency {
  ObjectType: String
  Ids: [Int]
}

input CxDependencyInput {
  ObjectType: String!
  Ids: [Int]!
}

type CxLookupValue {
  Name: String
  Dependencies: [CxDependency]
  Id: ID!
  Description: String
  ObjectType: CxLookupValueObjectType
}

input CxLookupValueInput {
  Name: String!
  Dependencies: [CxDependencyInput]
  Id: ID!
  Description: String
  ObjectType: CxLookupValueObjectType!
}

enum CxLookupValueObjectType {
  Division
  LaborClass
  Language
  License
  Skill
  Training
  Union
  State
  Attribute
  PurchaseOrderStatus
  TimeEntryType
  CompanyType
  JobStatus
  DocumentType
  TimeEntryLaborClass
  ToDoStatus
  ToDoPriority
  JobPriority
  JobSubtype
  JobType
  Minority
  Privilege
  JobCertification
}

input FilterInput {
  name: String!
  values: [String]
  child: String
  invert: Boolean = false
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

input methodInput {
  name: String!
  args: JSONObject
}

input methodsByItemInput {
  indices: [Int]
  methods: [methodInput]
  noEdit: String
}

extend type Mutation {
  cxLookupValues_onSave(data: [CxLookupValueInput], filters: [FilterInput], objectType: String = "Division", operation: String = "edit", properties: [String], methodsByItem: [methodsByItemInput]): [CxLookupValue]
  cxLookupValues_onDelete(data: [String], objectType: String = "Division", operation: String = "delete"): [CxLookupValue]
}

extend type Query {
  cxLookupValues(filters: [FilterInput], objectType: String = "Division"): [CxLookupValue]
}
